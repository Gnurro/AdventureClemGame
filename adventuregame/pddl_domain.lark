%import common.WORD
%import common.WS
%import common.NUMBER

DASH: "-"
UNDERSCORE: "_"
WORDP: WORD (DASH | UNDERSCORE | WORD | NUMBER)*

type_list: "(" type_list_item+ ")"
type_list_item: (var WS | WORDP WS)+ DASH WS WORDP WS*


define: DEFINEL WS+ domain_id WS+ types WS+ ")"
DEFINEL.1: "(define"

domain_id: DOMAINIDL WS+ WORDP WS* ")"
DOMAINIDL.1: "(domain"

types: TYPESL WS+ (type_list_item WS+)+ WS* ")"
TYPESL.1: "(:types"




andp: ANDL WS+ ((type_list | pred | notp | forall | equal | orp | when) WS*)+ ")" WS*
ANDL.1: "(and"

orp: ORL WS+ ((type_list | pred | notp | forall | equal | andp) WS*)+ ")" WS*
ORL.1: "(or"

notp: NOTL WS+ pred ")"
NOTL.1: "(not"

forall: FORALLL WS+ (type_list | pred)+ WS* (when | andp) ")"
FORALLL.1: "(forall"

when: WHENL WS+ (type_list | pred | notp | forall | equal | andp) WS+ (type_list | pred | notp | forall | equal | andp) WS* ")" WS*
WHENL.1: "(when"

var: "?" WORDP
pred: "(" (WORDP | var) WS* (WORDP WS* | var WS*)* ")"

equal: EQL WS (WORDP | var) WS (WORDP | var) ")"
EQL.1: "(="